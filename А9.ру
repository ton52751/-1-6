import numpy as np

# ДАНО
S = 27
G = 6
K = 80301

Z = np.array([[1, 5, 1],
              [4, -1, 1],
              [S, G, 2*(S+G+K)]])
O = np.array([S-G+K+10, S-G+4*K-2, 2*((S-G)*(S+G+K)+G)+K*S])
V0 = np.array([0, 0, 0])
def simple_iteration_method(Z, O, V0, max_iter=100, tol=1e-6):
    n = len(O)
    V = V0.copy()
    for _ in range(max_iter):
        V_new = np.zeros(n)
        for i in range(n):
            V_new[i] = (O[i] - Z[i, :].dot(V_new) + Z[i, i]*V_new[i]) / Z[i, i]
        if np.linalg.norm(V_new - V) < tol:
            return V_new
        V = V_new
    return V
# Решение СЛАУ методом простой итерации
result_simple_iteration = simple_iteration_method(Z, O, V0)
print("Решение методом простой итерации:", result_simple_iteration)
# Метод Зейделя
def gauss_seidel_method(Z, O, V0, max_iter=100, tol=1e-6):
    n = len(O)
    V = V0.copy()
    for _ in range(max_iter):
        for i in range(n):
            V[i] = (O[i] - Z[i, :i].dot(V[:i]) - Z[i, i+1:].dot(V[i+1:])) / Z[i, i]
        if np.linalg.norm(Z.dot(V) - O) < tol:
            return V
    return V
result_gauss_seidel = gauss_seidel_method(Z, O, V0)
print("Решение методом Зейделя:", result_gauss_seidel)
